build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  #before_script: 
  #  - sudo apt update && sudo apt -y install cmake
  script:
    - git submodule init
    - git submodule update
    - mkdir build
    - cd build
    - export CXX=clang++
    - export CC=clang
    - cmake ..
    - make -j4
  artifacts:
    paths:
      - build/dependencies/gdsl-toolkit/libs/gdsl-multiplex/libmultiplex.so
      - build/dependencies/gdsl-toolkit/libgdsl_x86_rreil.so
      - build/libsummy.a
      - build/tools/sweep/sweep
      - build/tools/tester/tester
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  cache:
     paths:
      - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
#    - pwd
#    - ls -hal
#    - find build
    - cd build
    - ln -s dependencies/gdsl-toolkit/libgdsl_x86_rreil.so libgdsl-current.so
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.:dependencies/gdsl-toolkit/libs/gdsl-multiplex
    - tools/tester/tester
